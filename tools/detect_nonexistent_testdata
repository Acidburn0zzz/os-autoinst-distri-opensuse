#!/usr/bin/env perl

# The script verifies if test data files included in yaml schedule exist in the repo.

use strict;
use warnings;
use YAML::Tiny;
use File::Basename;
use Data::Dumper;

=head2 get_testdata_filename

  get_testdata_paths($schedule_file_path);

Returns yaml test data file name(s) with path, in case yaml schedule includes any, either via $include tag or YAML_TEST_DATA variable.

=cut
sub get_data_files {
    my ($schedule_file_path) = @_;
    my $schedule             = YAML::Tiny::LoadFile($schedule_file_path);
    my $include_tag          = '$include';
    my @filename_list;
    my $test_data = $schedule->{test_data};
    my @filenames;
    if (ref($test_data->{$include_tag}) eq 'ARRAY') {
        @filenames = @{$test_data->{$include_tag}};
    }
    else {
        @filenames = $test_data->{$include_tag};
    }
    if ($test_data && @filenames) {
        foreach my $item (@filenames) {
            push(@filename_list, $item);
        }
    }
    my $datafile = $schedule->{vars}->{YAML_TEST_DATA};
    push(@filename_list, $datafile) if $datafile;
    return @filename_list;
}

my $success = 1;
foreach my $schedule_file (@ARGV) {
    my @data_filenames = get_data_files($schedule_file);
    if (@data_filenames) {
        foreach my $item (@data_filenames) {
            unless (-f $item) {
                $success = 0;
                print "Failure: Test data file $item used in $schedule_file does not exist in the repo.\n";
            }
        }
    }
}
$success == 1 ? exit 0 : exit 1;
